<input type="hidden" id="hdn-fld-appointment-weekly" value="<%= @appointments_current_week.to_json %>">
<input type="hidden" id="hdn-fld-appointment-monthly" value="<%= @appointments_current_month.to_json %>">
<input type="hidden" id="hdn-fld-appointment-yearly" value="<%= @appointments_current_year.to_json %>">

<div class="wrapper wrapper-content">
  <div class="row">
    <div class="col-md-4">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <span class="label label-primary pull-right"></span>
          <h5>Total Patient</h5>
        </div>
        <div class="ibox-content">
          <h1 class="no-margins"><%= @patients.count() %></h1>
          <div class="stat-percent font-bold text-info"></div>
          <small>Overall Patient Count</small>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <span class="label label-success pull-right">OB</span>
          <h5>Total Patient</h5>
        </div>
        <div class="ibox-content">
          <h1 class="no-margins"><%= @patient_type_ob.count()  %></h1>
          <% if @patient_type_ob.count() != 0 %>
            <div class="stat-percent font-bold text-success"><%= ((@patient_type_ob.count().to_f / @patients.count()) * 100).to_i %>%</div>
          <% end %>
          <small>Overall Percentage</small>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <span class="label label-info pull-right">Gyne</span>
          <h5>Total Patient</h5>
        </div>
        <div class="ibox-content">
          <h1 class="no-margins"><%= @patient_type_gyne.count() %></h1>
          <% if @patient_type_gyne.count() != 0 %>
            <div class="stat-percent font-bold text-info"><%= ((@patient_type_gyne.count().to_f / @patients.count()) * 100).to_i %>%</div>
          <% end %>
          <small>Overall Percentage</small>
        </div>
      </div>
    </div>

  </div>
  <div class="row">
    <div class="col-md-12">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <span class="label label-primary pull-right"></span>
          <h5>Daily Report</h5>
        </div>
        <div class="ibox-content">
          <div class="row">
            <div class="col-md-3">
              <h1 class="no-margins"><%= @daily_appointment.count() %></h1>
              <small>Total Appointment</small>
            </div>
            <div class="col-md-3">
              <h1 class="no-margins"><%= @daily_appointment_complete.count() %></h1>
              <small>Completed</small>
            </div>
            <div class="col-md-3">
              <h1 class="no-margins"><%= @daily_appointment_cancelled.count() %></h1>
              <small>Cancelled</small>
            </div>
            <div class="col-md-3">
              <% if @daily_appointment_complete.count() != 0 %>
              <h1 class="no-margins"><%= ((@daily_appointment_complete.count().to_f / @daily_appointment.count()) * 100).to_i %>%</h1>
              <% end %>
              <small>Overall</small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <h5>Patients</h5>
          <div class="pull-right">
            <div class="btn-group">
              <button type="button" class="btn btn-xs btn-white btn-sort active" data-type="0">Weekly</button>
              <button type="button" class="btn btn-xs btn-white btn-sort" data-type="1">Monthly</button>
              <button type="button" class="btn btn-xs btn-white btn-sort" data-type="2">Annual</button>
            </div>
          </div>
        </div>
        <div class="ibox-content">
          <div class="row">
            <div class="col-lg-12">
              <div class="flot-chart">
                <div class="flot-chart-content" id="flot-dashboard-chart"></div>
              </div>
              <div>
                <canvas id="lineChart" height="70" class="hidden"></canvas>
              </div>
            </div>
            <!--<div class="col-lg-3">-->
              <!--<ul class="stat-list">-->
                <!--<li>-->
                  <!--<h2 class="no-margins"></h2>-->
                  <!--<small>Total completed in period</small>-->
                  <!--<div class="stat-percent">58% <i class="fa fa-level-up text-navy"></i></div>-->
                  <!--<div class="progress progress-mini">-->
                    <!--<div style="width: 58%;" class="progress-bar"></div>-->
                  <!--</div>-->
                <!--</li>-->
                <!--<li>-->
                  <!--<h2 class="no-margins ">45</h2>-->
                  <!--<small>Total patient in period</small>-->
                  <!--<div class="stat-percent">60% <i class="fa fa-level-down text-navy"></i></div>-->
                  <!--<div class="progress progress-mini">-->
                    <!--<div style="width: 60%;" class="progress-bar"></div>-->
                  <!--</div>-->
                <!--</li>-->
                <!--<li>-->
                  <!--<h2 class="no-margins ">9,180</h2>-->
                  <!--<small>Overall </small>-->
                  <!--<div class="stat-percent">22% <i class="fa fa-bolt text-navy"></i></div>-->
                  <!--<div class="progress progress-mini">-->
                    <!--<div style="width: 22%;" class="progress-bar"></div>-->
                  <!--</div>-->
                <!--</li>-->
              <!--</ul>-->
            <!--</div>-->
          </div>
        </div>

      </div>
    </div>
  </div>

</div>

<% content_for :javascript do %>

    <script type="text/javascript">

      $(function() {

        var date = new Date; // get current date
        var first = date.getDate() - date.getDay(); // First day is the day of the month - the day of the week
        var last = first + 6;

        var firstDay = new Date(date.setDate(first));
        var lastDay = new Date(date.setDate(last));

        var weeklyData = JSON.parse($(' #hdn-fld-appointment-weekly ').val());

        console.log('firstDay: ' + firstDay)

        setGraph(firstDay, lastDay, weeklyData);

        $(".btn-sort").click(function () {

          var type = $( this ).data('type');

          $('.btn-sort').removeClass('active');
          $( this ).addClass('active');

          var date = new Date();

          var firstDay = "";
          var lastDay = "";

          if ( type ==  0 ) {

            var first= date.getDate() - date.getDay(); // First day is the day of the month - the day of the week
            var last = first + 6;

            firstDay = new Date(date.setDate(first));
            lastDay = new Date(date.setDate(last));

            $('#flot-dashboard-chart').closest('.flot-chart').removeClass('hidden');
            $('#lineChart').addClass('hidden');

            var rangeData = JSON.parse($(' #hdn-fld-appointment-weekly ').val());

          } else if ( type == 1 ) {

            firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
            lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

            $('#flot-dashboard-chart').closest('.flot-chart').removeClass('hidden');
            $('#lineChart').addClass('hidden');

            var rangeData = JSON.parse($(' #hdn-fld-appointment-monthly ').val());

          } else {

            firstDay = new Date(date.getFullYear(), 1, 1);
            lastDay = new Date(date.getFullYear(), 12 + 1, 0);

            $('#flot-dashboard-chart').closest('.flot-chart').addClass('hidden');
            $('#lineChart').removeClass('hidden');

          }

          setGraph(firstDay, lastDay, rangeData);

        });

        var yearTotal = [0,0,0,0,0,0,0,0,0,0,0,0];
        var yearCompleted = [0,0,0,0,0,0,0,0,0,0,0,0];

        var dataYear = JSON.parse($(' #hdn-fld-appointment-yearly ').val());



        $.each(dataYear, function (key, value) {
          var index = parseInt(moment(value['consultation_date']).format('M')) - 1;

          var newValue = yearTotal[index] += 1

          yearTotal.splice(index, 1, newValue);
          if (value['status'] == 'complete') {
            yearCompleted.splice(index, 1, yearCompleted[index] += 1);
          }

        });

        console.log('yearTotal: ' + JSON.stringify(yearTotal))
        console.log('yearCompleted: ' + JSON.stringify(yearCompleted))

        var lineData = {
          labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
          datasets: [
            {
              label: "Total",
              fillColor: "rgba(220,220,220,0.5)",
              strokeColor: "rgba(220,220,220,1)",
              pointColor: "rgba(220,220,220,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(220,220,220,1)",
              data: yearTotal
            },
            {
              label: "Completed",
              fillColor: "rgba(26,179,148,0.5)",
              strokeColor: "rgba(26,179,148,0.7)",
              pointColor: "rgba(26,179,148,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(26,179,148,1)",
              data: yearCompleted
            }
          ]
        };

        var lineOptions = {
          scaleShowGridLines: true,
          scaleGridLineColor: "rgba(0,0,0,.05)",
          scaleGridLineWidth: 1,
          bezierCurve: true,
          bezierCurveTension: 0.4,
          pointDot: true,
          pointDotRadius: 4,
          pointDotStrokeWidth: 1,
          pointHitDetectionRadius: 20,
          datasetStroke: true,
          datasetStrokeWidth: 2,
          datasetFill: true,
          responsive: true,
        };


        var ctx = document.getElementById("lineChart").getContext("2d");
        var myNewChart = new Chart(ctx).Line(lineData, lineOptions);

      });

      function setGraph(firstDay, lastDay, rangeData) {

        var dailyTotal      = [];
        var dailyComplete   = [];
        var dailyOverdue    = [];
        var index           = 0;

        var dataset = [
          {
            label: "Total Patients",
            data: dailyTotal,
            color: "#1ab394",
            bars: {
              show: true,
              align: "center",
              barWidth: 24 * 60 * 60 * 600,
              lineWidth: 0
            }

          }, {
            label: "Completed",
            data: dailyComplete,
            color: "#1C84C6",
            lines: {
              lineWidth: 1,
              show: true,
              fill: true,
              fillColor: {
                colors: [{
                  opacity: 0.2
                }, {
                  opacity: 0.2
                }]
              }
            },
            splines: {
              show: false,
              tension: 0.6,
              lineWidth: 1,
              fill: 0.1
            },
          }, {
            label: "Overdue",
            data: dailyOverdue,
            color: "#B03060",
            lines: {
              lineWidth: 1,
              show: true,
              fill: true,
              fillColor: {
                colors: [{
                  opacity: 0.2
                }, {
                  opacity: 0.2
                }]
              }
            },
            splines: {
              show: false,
              tension: 0.6,
              lineWidth: 1,
              fill: 0.1
            },
          }
        ];
        var options = {
          xaxis: {
            mode: "time",
            tickSize: [3, "day"],
            tickLength: 0,
            axisLabel: "Date",
            axisLabelUseCanvas: true,
            axisLabelFontSizePixels: 12,
            axisLabelFontFamily: 'Arial',
            axisLabelPadding: 10,
            color: "#d5d5d5"
          },
          yaxes: [{
            position: "left",
            max: 20,
            color: "#d5d5d5",
            axisLabelUseCanvas: true,
            axisLabelFontSizePixels: 12,
            axisLabelFontFamily: 'Arial',
            axisLabelPadding: 3
          }, {
            position: "right",
            clolor: "#d5d5d5",
            axisLabelUseCanvas: true,
            axisLabelFontSizePixels: 12,
            axisLabelFontFamily: ' Arial',
            axisLabelPadding: 67
          }
          ],
          legend: {
            noColumns: 1,
            labelBoxBorderColor: "#000000",
            position: "nw"
          },
          grid: {
            hoverable: false,
            borderWidth: 0
          }
        };

        for (var d = new Date(firstDay); d <= lastDay; d.setDate(d.getDate() + 1)) {

          var date = moment(d).format('YYYY-MM-DD').split("-");

          var dailyDataTotal = 0;
          var dailyDataComplete = 0;
          var dailyDataOverDue = 0;

          $.each(rangeData, function (key, value) {

            if (moment(new Date(value["consultation_date"])).format('YYYY-MM-DD') == moment(new Date(d)).format('YYYY-MM-DD')) {
              dailyDataTotal += 1;

              if (value['status'] == "complete") {
                dailyDataComplete += 1;
              } else if (new Date() > new Date(value["consultation_date"]) && (value["status"] == "queued" || value["status"] == "inprogress")) {
                dailyDataOverDue += 1;
              }

            }

          });

          var dataTotal = [gd(parseInt(date[0]), parseInt(date[1]), parseInt(date[2])), dailyDataTotal];
          var dataComplete = [gd(parseInt(date[0]), parseInt(date[1]), parseInt(date[2])), dailyDataComplete];
          var dataOverdue = [gd(parseInt(date[0]), parseInt(date[1]), parseInt(date[2])), dailyDataOverDue];

          dailyTotal.push(dataTotal);
          dailyComplete.push(dataComplete);
          dailyOverdue.push(dataOverdue);

          index ++;
        }

        $.plot($("#flot-dashboard-chart"), dataset, options);$.plot($("#flot-dashboard-chart"), dataset, options);

      }

      function get_ajax_daily_total(date, callback) {
        $.get( "/api/v1/get_appointments_by_date", { date: date } )
            .done(function( data ) {
              callback(data)
            });
      }

      function gd(year, month, day) {
        return new Date(year, month - 1, day).getTime();
      }

    </script>

<% end %>